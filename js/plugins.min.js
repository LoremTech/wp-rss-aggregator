(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["WPRA"] = factory();
	else
		root["WPRA"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return webpackJsonpWPRA([1],[
/* 0 */,
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_PluginDisablePoll_vue_vue_type_script_lang_js___ = __webpack_require__(13);
/* unused harmony namespace reexport */
 /* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_PluginDisablePoll_vue_vue_type_script_lang_js___["a" /* default */]); 

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Modal__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__SerializedForm__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_axios__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_axios__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/**
 * Selector string for plugin's deactivation link.
 *
 * @type {string}
 */
var deactivateSelector = '[data-slug="wp-rss-aggregator"] .deactivate a';
var deactivateLink = document.querySelector(deactivateSelector);

/* harmony default export */ __webpack_exports__["a"] = ({
  components: {
    Modal: __WEBPACK_IMPORTED_MODULE_0__Modal__["a" /* default */],
    SerializedForm: __WEBPACK_IMPORTED_MODULE_1__SerializedForm__["a" /* default */]
  },
  data: function data() {
    return {
      isDeactivating: false,
      deactivateUrl: null,
      submitUrl: WrpaDisablePoll.url,
      model: WrpaDisablePoll.model,
      form: WrpaDisablePoll.form,
      isModalVisible: false
    };
  },

  watch: {
    'model.reason': function modelReason() {
      this.model.follow_up = null;
    }
  },
  mounted: function mounted() {
    deactivateLink.addEventListener('click', this.handleDeactivateClick);
  },

  methods: {
    image: function image(path) {
      return WrpaDisablePoll.image + path;
    },
    handleDeactivateClick: function handleDeactivateClick(e) {
      if (this.isModalVisible) {
        return;
      }

      e.preventDefault();
      this.isModalVisible = true;
    },
    closeModal: function closeModal() {
      this.isModalVisible = false;
      this.deactivateUrl = null;
    },
    submit: function submit() {
      var _this = this;

      this.isDeactivating = true;
      __WEBPACK_IMPORTED_MODULE_2_axios___default.a.post(this.submitUrl, this.model, {
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      }).then(function () {
        _this.deactivate();
      }).finally(function () {
        _this.isDeactivating = false;
      });
    },
    deactivate: function deactivate() {
      deactivateLink.click();
    }
  }
});

/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_Modal_vue_vue_type_script_lang_js___ = __webpack_require__(15);
/* unused harmony namespace reexport */
 /* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_Modal_vue_vue_type_script_lang_js___["a" /* default */]); 

/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/**
 * Abstract dialog component, solid foundation for
 * any modals and dialogs that opened over the rest page content.
 *
 * @param Vue
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    /**
     * Determines dialog visibility. This property is passed
     * from outside and cannot be changed inside dialog.
     * Dialog's consumer is responsible for manipulating dialog's visibility.
     *
     * @property {bool}
     */
    active: {
      type: Boolean
    },

    /**
     * Modal title
     *
     * @property {string}
     */
    title: {
      type: String
    },

    /**
     * Additional class modifier for modal customization.
     *
     * @property {string}
     */
    modalBodyClass: {
      type: String,
      default: ''
    },

    /**
     * Additional classes for modal header.
     *
     * @property {object|Array}
     */
    headerClass: {
      default: function _default() {
        return {};
      }
    },

    /**
     * Class that applies to the body and used
     * to prevent body's scroll catch, so long dialog can be scrolled
     * without interfering with body scroll.
     *
     * @property {string}
     */
    dialogOpenedClass: {
      type: String,
      default: 'modal-opened'
    }
  },

  watch: {
    /**
     * Watch for "active" property change and emit corresponding
     * event when it changed.
     *
     * @param isDialogActive {bool}
     */
    active: function active(isDialogActive) {
      this.$emit(isDialogActive ? 'open' : 'close');
    }
  },

  mounted: function mounted() {
    var _this = this;

    /*
     * Add body "frozen" class to the body when dialog is opened.
     */
    this.$on('open', function () {
      document.querySelector('body').classList.add(_this.dialogOpenedClass);
    });

    /*
     * Remove body "frozen" class from the body when dialog is closed.
     */
    this.$on('close', function () {
      document.querySelector('body').classList.remove(_this.dialogOpenedClass);
    });
  }
});

/***/ }),
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_SerializedForm_vue_vue_type_script_lang_js___ = __webpack_require__(17);
/* unused harmony namespace reexport */
 /* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_SerializedForm_vue_vue_type_script_lang_js___["a" /* default */]); 

/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    /*
     * Form, described by object containing information
     * about each field.
     */
    form: {
      type: Array
    },

    /*
     * Form model.
     */
    value: {
      type: Object
    }
  },
  computed: {
    model: {
      get: function get() {
        return this.value;
      },
      set: function set(value) {
        this.$emit('input', value);
      }
    }
  },
  methods: {
    satisfiesCondition: function satisfiesCondition(datum) {
      if (!datum.condition) {
        return true;
      }
      var compareFunction = this.getConditionFunction(datum.condition.operator);
      if (!compareFunction) {
        return false;
      }
      return compareFunction(datum.condition.field, datum.condition.value);
    },
    getConditionFunction: function getConditionFunction(operator) {
      var _this = this;

      var fns = {
        '=': function _(field, value) {
          return _this.model[field] === value;
        }
      };
      if (!fns[operator]) {
        return null;
      }
      return fns[operator];
    }
  }
});

/***/ }),
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__PluginDisablePoll__ = __webpack_require__(43);
__webpack_require__(42);




new __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */]({
  el: '#wpra-plugins-app',
  template: '<PluginDisablePoll/>',
  components: { PluginDisablePoll: __WEBPACK_IMPORTED_MODULE_1__PluginDisablePoll__["a" /* default */] }
});

/***/ }),
/* 42 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__PluginDisablePoll_vue_vue_type_template_id_7ba83fa2___ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__PluginDisablePoll_vue_vue_type_script_lang_js___ = __webpack_require__(12);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__ = __webpack_require__(1);





/* normalize component */

var component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_1__PluginDisablePoll_vue_vue_type_script_lang_js___["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_0__PluginDisablePoll_vue_vue_type_template_id_7ba83fa2___["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_0__PluginDisablePoll_vue_vue_type_template_id_7ba83fa2___["b" /* staticRenderFns */],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) {
  var api = require("/Users/rom/projects/my-project/web/app/plugins/wp-rss-aggregator/node_modules/vue-hot-reload-api/dist/index.js")
  api.install(require('vue'))
  if (api.compatible) {
    module.hot.accept()
    if (!module.hot.data) {
      api.createRecord('7ba83fa2', component.options)
    } else {
      api.reload('7ba83fa2', component.options)
    }
    module.hot.accept("./PluginDisablePoll.vue?vue&type=template&id=7ba83fa2&", function () {
      api.rerender('7ba83fa2', {
        render: render,
        staticRenderFns: staticRenderFns
      })
    })
  }
}
component.options.__file = "js/src/plugins/PluginDisablePoll.vue"
/* harmony default export */ __webpack_exports__["a"] = (component.exports);

/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_PluginDisablePoll_vue_vue_type_template_id_7ba83fa2___ = __webpack_require__(45);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_PluginDisablePoll_vue_vue_type_template_id_7ba83fa2___["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_PluginDisablePoll_vue_vue_type_template_id_7ba83fa2___["b"]; });


/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "wpra-plugin-disable-poll" },
    [
      _c(
        "modal",
        {
          attrs: {
            active: _vm.isModalVisible,
            "header-class": "invisible-header"
          },
          on: { close: _vm.closeModal }
        },
        [
          _c("div", { attrs: { slot: "header" }, slot: "header" }, [
            _c("div", { staticClass: "wpra-plugin-disable-poll__logo" }, [
              _c("img", {
                attrs: { src: _vm.image("light-line-logo.png"), alt: "" }
              })
            ]),
            _vm._v(" "),
            _c("h3", [
              _vm._v(
                "\n                Do you have a moment to share why you are deactivating WP RSS Aggregator?\n            "
              )
            ]),
            _vm._v(" "),
            _c("p", [
              _vm._v(
                "\n                Your feedback will help us to improve our plugins and service.\n            "
              )
            ])
          ]),
          _vm._v(" "),
          _c(
            "div",
            { attrs: { slot: "body" }, slot: "body" },
            [
              _c("SerializedForm", {
                attrs: { form: _vm.form },
                model: {
                  value: _vm.model,
                  callback: function($$v) {
                    _vm.model = $$v
                  },
                  expression: "model"
                }
              })
            ],
            1
          ),
          _vm._v(" "),
          _c("div", { attrs: { slot: "footer" }, slot: "footer" }, [
            _c("div", { staticClass: "footer-confirm__buttons" }, [
              _c(
                "button",
                {
                  staticClass: "button button-clear",
                  on: { click: _vm.deactivate }
                },
                [
                  _vm._v(
                    "\n                    Skip & Deactivate\n                "
                  )
                ]
              ),
              _vm._v(" "),
              _c(
                "button",
                {
                  staticClass: "button button-primary",
                  class: { "loading-button": _vm.isDeactivating },
                  on: { click: _vm.submit }
                },
                [
                  _vm._v(
                    "\n                    Submit & Deactivate\n                "
                  )
                ]
              )
            ])
          ])
        ]
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Modal_vue_vue_type_template_id_17a67d8a___ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Modal_vue_vue_type_script_lang_js___ = __webpack_require__(14);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__ = __webpack_require__(1);





/* normalize component */

var component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_1__Modal_vue_vue_type_script_lang_js___["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_0__Modal_vue_vue_type_template_id_17a67d8a___["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_0__Modal_vue_vue_type_template_id_17a67d8a___["b" /* staticRenderFns */],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) {
  var api = require("/Users/rom/projects/my-project/web/app/plugins/wp-rss-aggregator/node_modules/vue-hot-reload-api/dist/index.js")
  api.install(require('vue'))
  if (api.compatible) {
    module.hot.accept()
    if (!module.hot.data) {
      api.createRecord('17a67d8a', component.options)
    } else {
      api.reload('17a67d8a', component.options)
    }
    module.hot.accept("./Modal.vue?vue&type=template&id=17a67d8a&", function () {
      api.rerender('17a67d8a', {
        render: render,
        staticRenderFns: staticRenderFns
      })
    })
  }
}
component.options.__file = "js/src/plugins/Modal.vue"
/* harmony default export */ __webpack_exports__["a"] = (component.exports);

/***/ }),
/* 47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Modal_vue_vue_type_template_id_17a67d8a___ = __webpack_require__(48);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Modal_vue_vue_type_template_id_17a67d8a___["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Modal_vue_vue_type_template_id_17a67d8a___["b"]; });


/***/ }),
/* 48 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("transition", { attrs: { name: "modal-transition" } }, [
    _vm.active
      ? _c(
          "div",
          {
            staticClass: "modal",
            on: {
              click: function($event) {
                if ($event.target !== $event.currentTarget) {
                  return null
                }
                _vm.$emit("close")
              }
            }
          },
          [
            _c("div", { class: ["modal__body", this.modalBodyClass] }, [
              _c(
                "div",
                { staticClass: "modal__header", class: _vm.headerClass },
                [_vm._t("header")],
                2
              ),
              _vm._v(" "),
              _c("div", { staticClass: "modal__content" }, [_vm._t("body")], 2),
              _vm._v(" "),
              _c("div", { staticClass: "modal__footer" }, [_vm._t("footer")], 2)
            ])
          ]
        )
      : _vm._e()
  ])
}
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__SerializedForm_vue_vue_type_template_id_3ee3f56c___ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__SerializedForm_vue_vue_type_script_lang_js___ = __webpack_require__(16);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__ = __webpack_require__(1);





/* normalize component */

var component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_1__SerializedForm_vue_vue_type_script_lang_js___["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_0__SerializedForm_vue_vue_type_template_id_3ee3f56c___["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_0__SerializedForm_vue_vue_type_template_id_3ee3f56c___["b" /* staticRenderFns */],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) {
  var api = require("/Users/rom/projects/my-project/web/app/plugins/wp-rss-aggregator/node_modules/vue-hot-reload-api/dist/index.js")
  api.install(require('vue'))
  if (api.compatible) {
    module.hot.accept()
    if (!module.hot.data) {
      api.createRecord('3ee3f56c', component.options)
    } else {
      api.reload('3ee3f56c', component.options)
    }
    module.hot.accept("./SerializedForm.vue?vue&type=template&id=3ee3f56c&", function () {
      api.rerender('3ee3f56c', {
        render: render,
        staticRenderFns: staticRenderFns
      })
    })
  }
}
component.options.__file = "js/src/plugins/SerializedForm.vue"
/* harmony default export */ __webpack_exports__["a"] = (component.exports);

/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SerializedForm_vue_vue_type_template_id_3ee3f56c___ = __webpack_require__(51);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SerializedForm_vue_vue_type_template_id_3ee3f56c___["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SerializedForm_vue_vue_type_template_id_3ee3f56c___["b"]; });


/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "form" },
    _vm._l(_vm.form, function(datum) {
      return _vm.satisfiesCondition(datum)
        ? _c(
            "div",
            { staticClass: "form-group" },
            [
              datum.type === "radio"
                ? [
                    datum.label
                      ? _c("label", {
                          attrs: { for: datum.name },
                          domProps: { innerHTML: _vm._s(datum.label) }
                        })
                      : _vm._e(),
                    _vm._v(" "),
                    _vm._l(datum.options, function(radio, $i) {
                      return _c("div", { staticClass: "form-check" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.model[datum.name],
                              expression: "model[datum.name]"
                            }
                          ],
                          attrs: {
                            type: "radio",
                            name: datum.name,
                            id: datum.name + "_" + $i
                          },
                          domProps: {
                            value: radio.value,
                            checked: _vm._q(_vm.model[datum.name], radio.value)
                          },
                          on: {
                            change: function($event) {
                              _vm.$set(_vm.model, datum.name, radio.value)
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c("label", { attrs: { for: datum.name + "_" + $i } }, [
                          _vm._v(
                            "\n                    " +
                              _vm._s(radio.label || radio.value) +
                              "\n                "
                          )
                        ])
                      ])
                    })
                  ]
                : _vm._e(),
              _vm._v(" "),
              datum.type === "textarea"
                ? [
                    datum.label
                      ? _c("label", {
                          attrs: { for: datum.name },
                          domProps: { innerHTML: _vm._s(datum.label) }
                        })
                      : _vm._e(),
                    _vm._v(" "),
                    _c("textarea", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.model[datum.name],
                          expression: "model[datum.name]"
                        }
                      ],
                      attrs: { id: datum.name },
                      domProps: { value: _vm.model[datum.name] },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(_vm.model, datum.name, $event.target.value)
                        }
                      }
                    })
                  ]
                : _vm._e(),
              _vm._v(" "),
              datum.type === "content"
                ? [
                    _c("div", { class: datum.className }, [
                      _c("p", { domProps: { innerHTML: _vm._s(datum.label) } })
                    ])
                  ]
                : _vm._e()
            ],
            2
          )
        : _vm._e()
    }),
    0
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ })
],[41]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,