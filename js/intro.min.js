(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["WPRA"] = factory();
	else
		root["WPRA"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return webpackJsonpWPRA([2],[
/* 0 */,
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_Wizard_vue_vue_type_script_lang_js___ = __webpack_require__(7);
/* unused harmony namespace reexport */
 /* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_Wizard_vue_vue_type_script_lang_js___["a" /* default */]); 

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Expander__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__fetch__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__copy__ = __webpack_require__(39);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





var _ = function _(str) {
  return str;
};

var CONFIG = window.wprssWizardConfig;

/* harmony default export */ __webpack_exports__["a"] = ({
  data: function data() {
    var _this = this;

    return {
      prevHeight: 0,
      screens: [{
        id: 'feed',
        title: _('Add feed source URL'),
        description: false,
        next: this.submitFeed,
        completed: function completed() {
          return _this.feed.items.length;
        },
        entered: function entered() {
          _this.focusOnInput('feed');
        }
      }, {
        id: 'feedItems',
        title: _('Display feed items'),
        description: false,
        next: this.continueItems,
        completed: function completed() {
          return _this.feed.items.length && _this.itemsPassed;
        }
      }, {
        id: 'finish',
        title: _('Complete introduction'),
        description: false,
        next: this.completeIntroduction,
        completed: function completed() {
          return _this.feed.items.length && _this.itemsPassed;
        }
      }],
      isCopied: false,

      isPreparing: false,
      isPrepared: false,

      transition: 'slide-up', // 'slide-down',

      activeScreen: 'feed',
      form: {
        feedSourceUrl: null
      },
      itemsPassed: false,

      stepLoading: false,
      isLoading: false,

      isFeedError: false,

      feed: {
        items: []
      },
      previewUrl: CONFIG.previewUrl,
      addOnsUrl: CONFIG.addOnsUrl,
      supportUrl: CONFIG.supportUrl,
      demoImageUrl: CONFIG.demoImageUrl,
      feedbackUrl: CONFIG.feedbackUrl,
      knowledgeBaseUrl: CONFIG.knowledgeBaseUrl
    };
  },

  computed: {
    validateLink: function validateLink() {
      return 'https://validator.w3.org/feed/check.cgi?url=' + encodeURI(this.form.feedSourceUrl);
    },
    activeScreenIndex: function activeScreenIndex() {
      var _this2 = this;

      return this.screens.findIndex(function (screen) {
        return screen.id === _this2.activeScreen;
      });
    },
    currentScreen: function currentScreen() {
      var _this3 = this;

      return this.screens.find(function (screen) {
        return screen.id === _this3.activeScreen;
      });
    },
    actionCompleted: function actionCompleted() {
      return this.currentScreen.completed();
    },
    isBackAvailable: function isBackAvailable() {
      return this.activeScreenIndex > 0 && this.activeScreenIndex < this.screens.length;
    }
  },
  mounted: function mounted() {
    this.onScreenEnter();
  },

  methods: {
    preparePreview: function preparePreview(e) {
      var _this4 = this;

      if (this.isPreparing) {
        e.preventDefault();
        return;
      }
      if (!this.isPrepared) {
        e.preventDefault();
        this.isPreparing = true;
        fetch(this.previewUrl).then(function () {
          _this4.isPreparing = false;
          _this4.isPrepared = true;
        });
      }
    },


    /**
     * Submits first feed step.
     *
     * @return {Promise<any>}
     */
    submitFeed: function submitFeed() {
      var _this5 = this;

      var data = Object.assign(CONFIG.feedEndpoint.defaultPayload, {
        wprss_intro_feed_url: this.form.feedSourceUrl
      });
      this.isLoading = true;
      this.isFeedError = false;
      return Object(__WEBPACK_IMPORTED_MODULE_1__fetch__["a" /* post */])(CONFIG.feedEndpoint.url, data).then(function (responseData) {
        _this5.feed.items = responseData.data.feed_items.slice(0, 3);
        _this5.isLoading = false;
        return {};
      }).catch(function (resp) {
        _this5.isLoading = false;
        _this5.isFeedError = true;
        throw resp;
      });
    },


    /**
     * Continue from items step.
     *
     * @return {Promise<any>}
     */
    continueItems: function continueItems() {
      this.itemsPassed = true;
      return Promise.resolve({});
    },


    /**
     * Complete the introduction and proceed to sources list.
     *
     * @return {Promise<any>}
     */
    completeIntroduction: function completeIntroduction() {
      return Promise.resolve({});
    },


    /**
     * Go to the next screen in this wizard.
     */
    next: function next() {
      var _this6 = this;

      this.transition = 'slide-up';
      var nextTransistor = this.currentScreen.next ? this.currentScreen.next : function () {
        return Promise.resolve(false);
      };
      this.stepLoading = true;
      nextTransistor().then(function (result) {
        _this6.stepLoading = false;
      }, function (err) {
        throw err;
      }).then(function () {
        var nextStepIndex = _this6.activeScreenIndex + 1;
        if (nextStepIndex >= _this6.screens.length) {
          _this6.finish();
        } else {
          _this6.activeScreen = _this6.screens[nextStepIndex].id;
          _this6.onScreenEnter();
        }
      }).catch(function (err) {
        console.error(err);
      });
    },


    /**
     * Run on screen event.
     */
    onScreenEnter: function onScreenEnter() {
      var _this7 = this;

      this.$nextTick(function () {
        if (_this7.currentScreen.entered) {
          _this7.currentScreen.entered();
        }
      });
    },


    /**
     * Focus on some ref input.
     */
    focusOnInput: function focusOnInput(refName) {
      if (!this.$refs[refName] || !this.$refs[refName].focus) {
        return false;
      }
      this.$refs[refName].focus();
    },


    /**
     * Go back in the wizard on one step.
     */
    back: function back() {
      this.transition = 'slide-down';
      this.activeScreen = this.screens[this.activeScreenIndex - 1].id;
    },


    /**
     * Finish this wizard.
     */
    finish: function finish() {
      var confirmFinish = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      var visitList = function visitList() {
        return window.location.href = CONFIG.feedListUrl;
      };
      if (confirmFinish) {
        if (confirm('Are you sure you want to skip the introduction?')) {
          visitList();
        }
        return;
      }
      visitList();
      // redirect to the URL.
    },
    active: function active(pageName) {
      return this.activeScreen === pageName;
    },
    copyToClipboard: function copyToClipboard() {
      var _this8 = this;

      if (this.isCopied) {
        return;
      }
      Object(__WEBPACK_IMPORTED_MODULE_2__copy__["a" /* copyToClipboard */])('[wp-rss-aggregator]');
      this.isCopied = true;
      setTimeout(function () {
        _this8.isCopied = false;
      }, 1000);
    }
  },
  components: {
    Expander: __WEBPACK_IMPORTED_MODULE_0__Expander__["a" /* default */]
  }
});

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_Expander_vue_vue_type_script_lang_js___ = __webpack_require__(9);
/* unused harmony namespace reexport */
 /* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_Expander_vue_vue_type_script_lang_js___["a" /* default */]); 

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TransitionExpand__ = __webpack_require__(37);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
  data: function data() {
    return {
      isExpanded: this.defaultExpanded
    };
  },

  props: {
    title: {},
    defaultExpanded: {
      value: false
    }
  },
  components: {
    TransitionExpand: __WEBPACK_IMPORTED_MODULE_0__TransitionExpand__["a" /* default */]
  }
});

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_TransitionExpand_vue_vue_type_script_lang_js___ = __webpack_require__(11);
/* unused harmony namespace reexport */
 /* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_TransitionExpand_vue_vue_type_script_lang_js___["a" /* default */]); 

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

/* harmony default export */ __webpack_exports__["a"] = ({
  name: "TransitionExpand",
  functional: true,
  render: function render(createElement, context) {
    var data = {
      props: {
        name: "expand"
      },
      on: {
        afterEnter: function afterEnter(element) {
          // eslint-disable-next-line no-param-reassign
          element.style.height = "auto";
        },
        enter: function enter(element) {
          var _getComputedStyle = getComputedStyle(element),
              width = _getComputedStyle.width;

          /* eslint-disable no-param-reassign */


          element.style.width = width;
          element.style.position = "absolute";
          element.style.visibility = "hidden";
          element.style.height = "auto";
          /* eslint-enable */

          var _getComputedStyle2 = getComputedStyle(element),
              height = _getComputedStyle2.height;

          /* eslint-disable no-param-reassign */


          element.style.width = null;
          element.style.position = null;
          element.style.visibility = null;
          element.style.height = 0;
          /* eslint-enable */

          // Force repaint to make sure the
          // animation is triggered correctly.
          // eslint-disable-next-line no-unused-expressions
          getComputedStyle(element).height;

          setTimeout(function () {
            // eslint-disable-next-line no-param-reassign
            element.style.height = height;
          });
        },
        leave: function leave(element) {
          var _getComputedStyle3 = getComputedStyle(element),
              height = _getComputedStyle3.height;

          // eslint-disable-next-line no-param-reassign


          element.style.height = height;

          // Force repaint to make sure the
          // animation is triggered correctly.
          // eslint-disable-next-line no-unused-expressions
          getComputedStyle(element).height;

          setTimeout(function () {
            // eslint-disable-next-line no-param-reassign
            element.style.height = 0;
          });
        }
      }
    };

    return createElement("transition", data, context.children);
  }
});

/***/ }),
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Wizard__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_whatwg_fetch__ = __webpack_require__(40);
__webpack_require__(27);





new __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */]({
  el: '#wpra-wizard-app',
  template: '<Wizard/>',
  components: { Wizard: __WEBPACK_IMPORTED_MODULE_1__Wizard__["a" /* default */] }
});

/***/ }),
/* 27 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Wizard_vue_vue_type_template_id_0195497e___ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Wizard_vue_vue_type_script_lang_js___ = __webpack_require__(6);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__ = __webpack_require__(1);





/* normalize component */

var component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_1__Wizard_vue_vue_type_script_lang_js___["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_0__Wizard_vue_vue_type_template_id_0195497e___["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_0__Wizard_vue_vue_type_template_id_0195497e___["b" /* staticRenderFns */],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) {
  var api = require("/Users/rom/projects/my-project/web/app/plugins/wp-rss-aggregator/node_modules/vue-hot-reload-api/dist/index.js")
  api.install(require('vue'))
  if (api.compatible) {
    module.hot.accept()
    if (!module.hot.data) {
      api.createRecord('0195497e', component.options)
    } else {
      api.reload('0195497e', component.options)
    }
    module.hot.accept("./Wizard.vue?vue&type=template&id=0195497e&", function () {
      api.rerender('0195497e', {
        render: render,
        staticRenderFns: staticRenderFns
      })
    })
  }
}
component.options.__file = "js/src/intro/Wizard.vue"
/* harmony default export */ __webpack_exports__["a"] = (component.exports);

/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Wizard_vue_vue_type_template_id_0195497e___ = __webpack_require__(33);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Wizard_vue_vue_type_template_id_0195497e___["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Wizard_vue_vue_type_template_id_0195497e___["b"]; });


/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "wizard-holder animated fadeIn" }, [
    _c("div", { staticClass: "connect-steps" }, [
      _c(
        "div",
        { staticClass: "step-items" },
        [
          _c("div", {
            staticClass: "step-progress",
            class: "step-progress--" + _vm.activeScreenIndex
          }),
          _vm._v(" "),
          _vm._l(_vm.screens, function(screen, index) {
            return _c(
              "div",
              {
                staticClass: "step-item",
                class: {
                  "step-item_active": _vm.active(screen.id),
                  "step-item_completed":
                    screen.completed() && index < _vm.activeScreenIndex
                }
              },
              [
                _c("div", { staticClass: "step-item__status" }, [
                  screen.completed() && index < _vm.activeScreenIndex
                    ? _c("span", { staticClass: "dashicons dashicons-yes" })
                    : _vm._e()
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "step-item__info" }, [
                  _c("div", { staticClass: "step-item__title" }, [
                    _vm._v(_vm._s(screen.title))
                  ]),
                  _vm._v(" "),
                  screen.description
                    ? _c("div", { staticClass: "step-item__description" }, [
                        _vm._v(_vm._s(screen.description))
                      ])
                    : _vm._e()
                ])
              ]
            )
          })
        ],
        2
      )
    ]),
    _vm._v(" "),
    _c(
      "div",
      { staticClass: "wizard" },
      [
        _c("transition", { attrs: { name: _vm.transition, mode: "out-in" } }, [
          _vm.active("feed")
            ? _c(
                "div",
                { key: _vm.activeScreen, staticClass: "wizard_content" },
                [
                  _c("div", { staticClass: "wizard_hello" }, [
                    _vm._v(
                      "\n                    Enter your first RSS Feed URL\n                "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "form",
                    {
                      staticClass: "wizard_info",
                      attrs: { id: "feedForm" },
                      on: {
                        submit: function($event) {
                          $event.preventDefault()
                          return _vm.next($event)
                        }
                      }
                    },
                    [
                      _c("div", { staticClass: "form-group" }, [
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model",
                              value: _vm.form.feedSourceUrl,
                              expression: "form.feedSourceUrl"
                            }
                          ],
                          staticClass: "wpra-feed-input",
                          attrs: {
                            type: "text",
                            placeholder: "https://www.sourcedomain.com/feed/"
                          },
                          domProps: { value: _vm.form.feedSourceUrl },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.form,
                                "feedSourceUrl",
                                $event.target.value
                              )
                            }
                          }
                        }),
                        _vm._v(" "),
                        _vm.isFeedError
                          ? _c("span", {
                              staticClass:
                                "dashicons dashicons-warning warning-icon"
                            })
                          : _vm._e(),
                        _vm._v(" "),
                        _vm.isFeedError
                          ? _c(
                              "a",
                              {
                                attrs: {
                                  href: _vm.validateLink,
                                  target: "_blank"
                                }
                              },
                              [_vm._v("Validate feed")]
                            )
                          : _vm._e()
                      ])
                    ]
                  ),
                  _vm._v(" "),
                  _vm.isFeedError
                    ? _c("div", { staticClass: "wizard_error" }, [
                        _c("p", [
                          _vm._v(
                            "This RSS feed URL appears to be invalid. Here are a couple of things you can try:"
                          )
                        ]),
                        _vm._v(" "),
                        _c("ol", [
                          _c("li", [
                            _vm._v(
                              'Check whether the URL you entered is the correct one by trying one of the options when clicking on "How do I find an RSS feed URL?" below.'
                            )
                          ]),
                          _vm._v(" "),
                          _c("li", [
                            _vm._v(
                              "\n                            Test out this other RSS feed URL to make sure the plugin is working correctly - https://www.wpmayor.com/feed/ - If it works, you may "
                            ),
                            _c(
                              "a",
                              {
                                attrs: {
                                  href: _vm.supportUrl,
                                  target: "_blank"
                                }
                              },
                              [_vm._v("contact us here")]
                            ),
                            _vm._v(
                              " to help you with your source.\n                        "
                            )
                          ]),
                          _vm._v(" "),
                          _c("li", [
                            _vm._v(
                              "Test the URL's validity by W3C standards, the standards we use in our plugins, using the “Validate feed” link above."
                            )
                          ])
                        ])
                      ])
                    : _vm._e(),
                  _vm._v(" "),
                  _c(
                    "expander",
                    { attrs: { title: "How do I find an RSS feed URL?" } },
                    [
                      _c("p", [
                        _vm._v(
                          "WP RSS Aggregator fetches feed items through RSS feeds. Almost every website in the world provides an RSS feed. Here's how to find it:"
                        )
                      ]),
                      _vm._v(" "),
                      _c("p", [
                        _vm._v(
                          "Option 1: Add /feed to the website's homepage URL "
                        )
                      ]),
                      _vm._v(" "),
                      _c("p", [
                        _vm._v(
                          "Many sites have their RSS feed at the same URL. For instance, if the website's URL is www.thiswebsite.com, then the RSS feed could be at www.thiswebsite.com/feed."
                        )
                      ]),
                      _vm._v(" "),
                      _c("p", [
                        _vm._v("Option 2: Look for the RSS share icon")
                      ]),
                      _vm._v(" "),
                      _c("p", [
                        _vm._v(
                          "Many websites have share icons on their pages for Facebook, Twitter and more. Many times, there will also be an orange RSS icon. Click on that to access the RSS feed URL."
                        )
                      ]),
                      _vm._v(" "),
                      _c("p", [_vm._v("Option 3: Browser RSS Auto-Discovery")]),
                      _vm._v(" "),
                      _c("p", [
                        _vm._v(
                          "Most browsers either include an RSS auto-discovery tool by default or they allow you to add extensions for it. Firefox shows an RSS icon above the website, in the address bar, which you can click on directly. Chrome offers extensions such as this one."
                        )
                      ]),
                      _vm._v(" "),
                      _c("p", [_vm._v("Option 4: Look at the Page Source")]),
                      _vm._v(" "),
                      _c("p", [
                        _vm._v(
                          'When on any page of the website you\'re looking to import feed items from, right click and press "View Page Source". Once the new window opens, use the “Find” feature (Ctrl-F on PC, Command-F on Mac) and search for " RSS". This should take you to a line that reads like this (or similar):'
                        )
                      ]),
                      _vm._v(" "),
                      _c("p", [
                        _c("code", [
                          _vm._v(
                            '\n                            <link rel="alternate" type="application/rss+xml" title="RSS Feed" href="https://www.sourcedomain.com/feed/" />\n                        '
                          )
                        ])
                      ]),
                      _vm._v(" "),
                      _c("p", [
                        _vm._v(
                          "The RSS feed’s URL is found between the quotes after href=. In the above case, it would be  https://www.sourcedomain.com/feed/."
                        )
                      ]),
                      _vm._v(" "),
                      _c("p", [
                        _c(
                          "a",
                          {
                            attrs: {
                              href: _vm.knowledgeBaseUrl,
                              target: "_blank"
                            }
                          },
                          [
                            _vm._v(
                              "Browse our Knowledge Base for more information."
                            )
                          ]
                        )
                      ])
                    ]
                  )
                ],
                1
              )
            : _vm._e(),
          _vm._v(" "),
          _vm.active("feedItems")
            ? _c(
                "div",
                { key: _vm.activeScreen, staticClass: "wizard_content" },
                [
                  _c("div", { staticClass: "wizard_hello" }, [
                    _vm._v(
                      "\n                    Latest feed items from your selected feed source:\n                "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "wpra-feed-items" },
                    _vm._l(_vm.feed.items, function(item) {
                      return _c("div", { staticClass: "wpra-feed-item" }, [
                        _c("div", { staticClass: "wpra-feed-item__link" }, [
                          _c(
                            "a",
                            {
                              attrs: { href: item.permalink, target: "_blank" }
                            },
                            [_vm._v(_vm._s(item.title))]
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "div",
                          { staticClass: "wpra-feed-item__info" },
                          [
                            item.date || item.author
                              ? [
                                  item.date
                                    ? [
                                        _vm._v(
                                          "\n                                    Published on " +
                                            _vm._s(item.date) +
                                            "\n                                "
                                        )
                                      ]
                                    : _vm._e(),
                                  _vm._v(" "),
                                  item.date && item.author
                                    ? [_vm._v("|")]
                                    : _vm._e(),
                                  _vm._v(" "),
                                  item.author
                                    ? [
                                        _vm._v(
                                          "\n                                    By " +
                                            _vm._s(item.author) +
                                            "\n                                "
                                        )
                                      ]
                                    : _vm._e()
                                ]
                              : _vm._e()
                          ],
                          2
                        )
                      ])
                    }),
                    0
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "wrpa-shortcode" }, [
                    _c("div", { staticClass: "wrpa-shortcode-preview" }, [
                      _c("div", { staticClass: "wrpa-shortcode-label" }, [
                        _vm._v(
                          "\n                            Create a draft page to preview these feed items on your site:\n                        "
                        )
                      ]),
                      _vm._v(" "),
                      _c(
                        "a",
                        {
                          staticClass: "button",
                          class: {
                            "button-primary": _vm.isPrepared,
                            "loading-button": _vm.isPreparing
                          },
                          attrs: { href: _vm.previewUrl, target: "_blank" },
                          on: { click: _vm.preparePreview }
                        },
                        [
                          _vm._v(
                            "\n                            " +
                              _vm._s(
                                _vm.isPrepared
                                  ? "Preview the Page"
                                  : "Create Draft Page"
                              ) +
                              "\n                        "
                          )
                        ]
                      )
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        staticClass: "wrpa-shortcode-form",
                        on: {
                          click: function($event) {
                            _vm.copyToClipboard()
                          }
                        }
                      },
                      [
                        _c("div", { staticClass: "wrpa-shortcode-label" }, [
                          _vm._v(
                            "\n                            Copy the shortcode to any page or post on your site:\n                        "
                          )
                        ]),
                        _vm._v(" "),
                        _c("input", {
                          ref: "selected",
                          staticClass: "wrpa-shortcode-form__shortcode",
                          attrs: {
                            type: "text",
                            readonly: "",
                            value: "[wp-rss-aggregator]"
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "div",
                          { staticClass: "wrpa-shortcode-form__button" },
                          [
                            _vm._v(
                              "\n                            " +
                                _vm._s(
                                  _vm.isCopied ? "Copied!" : "Click to copy"
                                ) +
                                "\n                        "
                            )
                          ]
                        )
                      ]
                    )
                  ])
                ]
              )
            : _vm._e(),
          _vm._v(" "),
          _vm.active("finish")
            ? _c(
                "div",
                { key: _vm.activeScreen, staticClass: "wizard_content" },
                [
                  _c("div", { staticClass: "wizard_hello" }, [
                    _vm._v(
                      "\n                    You’ve successfully set up your first feed source 😄\n                "
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "wpra-cols-title" }, [
                    _vm._v(
                      "\n                    Do more with WP RSS Aggregator - here is what we did at CryptoHeadlines.com.\n                "
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "wpra-cols" }, [
                    _c("div", { staticClass: "col" }, [
                      _c("p", [
                        _vm._v(
                          "CryptoHeadlines.com displays latest news, Youtube videos, podcasts, jobs and more from the Cryptocurrency industry."
                        )
                      ]),
                      _vm._v(" "),
                      _c("p", [
                        _vm._v(
                          "It uses Feed to Post to import articles, Youtube videos, and podcast links."
                        )
                      ]),
                      _vm._v(" "),
                      _c("p", [
                        _vm._v(
                          "Full Text RSS Feeds is used to fetch the full content of the job listings to present more information to the potential applicant."
                        )
                      ]),
                      _vm._v(" "),
                      _c("p", [
                        _vm._v(
                          "Keyword Filtering is used to filter out content that contains profanity and keywords or phrases deemed as inappropriate."
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", { staticStyle: { "margin-bottom": ".5rem" } }, [
                        _c(
                          "a",
                          {
                            staticClass: "button",
                            attrs: { href: _vm.addOnsUrl, target: "_blank" }
                          },
                          [
                            _vm._v(
                              "\n                                Browse Add-ons ⭐️\n                            "
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", [
                        _c(
                          "a",
                          {
                            staticStyle: { "font-size": ".9em" },
                            attrs: { href: _vm.supportUrl, target: "_blank" }
                          },
                          [_vm._v("Contact support for more information.")]
                        )
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col" }, [
                      _c("img", {
                        staticClass: "img wpra-demo-photo",
                        attrs: { src: _vm.demoImageUrl }
                      }),
                      _vm._v(" "),
                      _c("div", { staticClass: "wpra-feedback" }, [
                        _c("div", { staticClass: "wpra-feedback__copy" }, [
                          _c("div", { staticClass: "wpra-feedback__text" }, [
                            _vm._v(
                              "\n                                    This plugin has made my life a lot easier, and the support has been great as well.\n                                "
                            )
                          ]),
                          _vm._v(" "),
                          _c("div", { staticClass: "wpra-feedback__rating" }, [
                            _c("span", {
                              staticClass: "dashicons dashicons-star-filled"
                            }),
                            _vm._v(" "),
                            _c("span", {
                              staticClass: "dashicons dashicons-star-filled"
                            }),
                            _vm._v(" "),
                            _c("span", {
                              staticClass: "dashicons dashicons-star-filled"
                            }),
                            _vm._v(" "),
                            _c("span", {
                              staticClass: "dashicons dashicons-star-filled"
                            }),
                            _vm._v(" "),
                            _c("span", {
                              staticClass: "dashicons dashicons-star-filled"
                            })
                          ]),
                          _vm._v(" "),
                          _c("div", { staticClass: "wpra-feedback__by" }, [
                            _c(
                              "a",
                              {
                                attrs: {
                                  href: _vm.feedbackUrl,
                                  target: "_blank"
                                }
                              },
                              [
                                _vm._v(
                                  "\n                                        Review by officeinnovator\n                                    "
                                )
                              ]
                            )
                          ])
                        ])
                      ])
                    ])
                  ])
                ]
              )
            : _vm._e()
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "connect-actions pad" }, [
          _c("div", { staticClass: "pad-item--grow" }, [
            !_vm.active("finish")
              ? _c(
                  "button",
                  { staticClass: "button-clear", on: { click: _vm.finish } },
                  [
                    _vm._v(
                      "\n                    Skip the introduction\n                "
                    )
                  ]
                )
              : _vm._e()
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "pad-item--no-shrink" }, [
            _vm.isBackAvailable
              ? _c(
                  "button",
                  { staticClass: "button-clear", on: { click: _vm.back } },
                  [_vm._v("\n                    Back\n                ")]
                )
              : _vm._e(),
            _vm._v(" "),
            _c(
              "button",
              {
                staticClass: "button button-primary button-large",
                class: { "loading-button": _vm.isLoading },
                on: { click: _vm.next }
              },
              [
                _vm._v(
                  "\n                    " +
                    _vm._s(
                      _vm.active("finish") ? "Continue to Plugin" : "Next"
                    ) +
                    "\n                "
                )
              ]
            )
          ])
        ])
      ],
      1
    )
  ])
}
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Expander_vue_vue_type_template_id_69537d1d___ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Expander_vue_vue_type_script_lang_js___ = __webpack_require__(8);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__ = __webpack_require__(1);





/* normalize component */

var component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_1__Expander_vue_vue_type_script_lang_js___["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_0__Expander_vue_vue_type_template_id_69537d1d___["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_0__Expander_vue_vue_type_template_id_69537d1d___["b" /* staticRenderFns */],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) {
  var api = require("/Users/rom/projects/my-project/web/app/plugins/wp-rss-aggregator/node_modules/vue-hot-reload-api/dist/index.js")
  api.install(require('vue'))
  if (api.compatible) {
    module.hot.accept()
    if (!module.hot.data) {
      api.createRecord('69537d1d', component.options)
    } else {
      api.reload('69537d1d', component.options)
    }
    module.hot.accept("./Expander.vue?vue&type=template&id=69537d1d&", function () {
      api.rerender('69537d1d', {
        render: render,
        staticRenderFns: staticRenderFns
      })
    })
  }
}
component.options.__file = "js/src/intro/Expander.vue"
/* harmony default export */ __webpack_exports__["a"] = (component.exports);

/***/ }),
/* 35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Expander_vue_vue_type_template_id_69537d1d___ = __webpack_require__(36);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Expander_vue_vue_type_template_id_69537d1d___["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Expander_vue_vue_type_template_id_69537d1d___["b"]; });


/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "wpra-expander",
      class: { "wpra-expander--expanded": _vm.isExpanded }
    },
    [
      _c(
        "div",
        {
          staticClass: "wpra-expander__title",
          on: {
            click: function($event) {
              _vm.isExpanded = !_vm.isExpanded
            }
          }
        },
        [
          _vm._v("\n        " + _vm._s(_vm.title) + "\n        "),
          _c("span", { staticClass: "dashicons dashicons-arrow-down-alt2" })
        ]
      ),
      _vm._v(" "),
      _c("transition-expand", [
        _vm.isExpanded
          ? _c("div", [
              _c(
                "div",
                { staticClass: "wpra-expander__content" },
                [_vm._t("default")],
                2
              )
            ])
          : _vm._e()
      ])
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TransitionExpand_vue_vue_type_script_lang_js___ = __webpack_require__(10);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_runtime_componentNormalizer_js__ = __webpack_require__(1);
var render, staticRenderFns




/* normalize component */

var component = Object(__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_runtime_componentNormalizer_js__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__TransitionExpand_vue_vue_type_script_lang_js___["a" /* default */],
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) {
  var api = require("/Users/rom/projects/my-project/web/app/plugins/wp-rss-aggregator/node_modules/vue-hot-reload-api/dist/index.js")
  api.install(require('vue'))
  if (api.compatible) {
    module.hot.accept()
    if (!module.hot.data) {
      api.createRecord('9aa05ab6', component.options)
    } else {
      api.reload('9aa05ab6', component.options)
    }
    
  }
}
component.options.__file = "js/src/intro/TransitionExpand.vue"
/* harmony default export */ __webpack_exports__["a"] = (component.exports);

/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = post;
/**
 * Make fetch request and parse response JSON.
 *
 * @param url
 * @param data
 * @param config
 *
 * @return {Promise<Response>}
 */
function post(url, data) {
  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var preparedData = new FormData();
  for (var _iterator = Object.keys(data), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
    var _ref;

    if (_isArray) {
      if (_i >= _iterator.length) break;
      _ref = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) break;
      _ref = _i.value;
    }

    var key = _ref;

    preparedData.set(key, data[key]);
  }
  return fetch(url, {
    method: 'post',
    body: preparedData
  }).then(function (response) {
    return response.json();
  }).then(function (data) {
    if (data.status !== 200) {
      throw data;
    }
    return data;
  });
}

/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = copyToClipboard;
/**
 * Helper functions to copy text to clipboard.
 *
 * @see https://stackoverflow.com/questions/400212/how-do-i-copy-to-the-clipboard-in-javascript
 *
 * @param text
 */

var fallbackCopyToClipboard = function fallbackCopyToClipboard(text) {
  var textArea = document.createElement('textarea');
  textArea.value = text;
  document.body.appendChild(textArea);
  textArea.focus();
  textArea.select();

  try {
    var successful = document.execCommand('copy');
    var msg = successful ? 'successful' : 'unsuccessful';
    console.log('Fallback: Copying text command was ' + msg);
  } catch (err) {
    console.error('Fallback: Oops, unable to copy', err);
  }

  document.body.removeChild(textArea);
};

function copyToClipboard(text) {
  if (!navigator.clipboard) {
    fallbackCopyToClipboard(text);
    return;
  }
  navigator.clipboard.writeText(text).then(function () {
    console.log('Async: Copying to clipboard was successful!');
  }, function (err) {
    console.error('Async: Could not copy text: ', err);
  });
}

/***/ })
],[26]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,